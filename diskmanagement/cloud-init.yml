Hereâ€™s the Cloud-Init script that will automatically detect, format, and mount the attached disk:

#cloud-config
package_update: true
package_upgrade: true

# Commands to automatically format and mount the attached disk
write_files:
  - content: |
      #!/bin/bash
      # Detect the attached data disk (usually /dev/sdc, adjust as needed)
      DEVICE="/dev/sdc"
      DEVICE1="/dev/sdd"
      
      # Check if the disk has already been partitioned
      if [ -z "$(lsblk -no FSTYPE $DEVICE)" ]; then
          # Create a new partition on the disk
          echo -e "n\np\n1\n\n\nw" | fdisk $DEVICE
          
          # Format the new partition with ext4 filesystem
          mkfs.ext4 ${DEVICE}1
          mkfs.ext4 ${DEVICE1}
          
          # Create a mount point
          mkdir -p /mnt/datadisk
          mkdir -p /mnt/data2
 
          
          # Mount the disk
          mount ${DEVICE}1 /mnt/datadisk
          mount ${DEVICE1} /mnt/data2
          
          # Add the disk to /etc/fstab so it auto-mounts on boot
          echo "${DEVICE}1 /mnt/datadisk ext4 defaults,nofail 0 2" >> /etc/fstab
           echo "${DEVICE1} /mnt/data2 ext4 defaults,nofail 0 2" >> /etc/fstab
      fi
    path: /var/lib/cloud/scripts/per-boot/disk-setup.sh
    permissions: "0755"

runcmd:
  - [ /var/lib/cloud/scripts/per-boot/disk-setup.sh ] # Run the script to format and mount the disk```

This `cloud-init.yml` does the following:
- Updates and upgrades packages.
- Detects if the disk is already formatted. If not, it creates a partition and formats the disk with an `ext4` filesystem.
- Mounts the disk at `/mnt/datadisk` and ensures the disk is added to `/etc/fstab` so it is automatically mounted on reboot.
